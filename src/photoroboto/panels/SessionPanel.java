/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SessionPanel.java
 *
 * Created on Dec 6, 2011, 11:49:30 PM
 */
package photoroboto.panels;

import java.util.Properties;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import photoroboto.enums.SessionProperties;

/**
 *
 * @author sh
 */
public class SessionPanel extends javax.swing.JPanel
{

    /** Creates new form SessionPanel */
    public SessionPanel()
    {
        initComponents();

        PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);
        printerSelectionComboBox.setModel(new DefaultComboBoxModel(printServices));
        printerSelectionComboBox.setSelectedItem(PrintServiceLookup.lookupDefaultPrintService());
    }

    public void getProperties(Properties properties)
    {
        if (!properties.isEmpty())
        {
            startupSessionCheckbox.setSelected(Boolean.parseBoolean(properties.getProperty(SessionProperties.SESSION_BEGIN_ON_STARTUP.name())));
            welcomeImageTextField.setText(properties.getProperty(SessionProperties.SESSION_WELCOME_IMAGE_PATH.name()));
            beginSessionImageTextField.setText(properties.getProperty(SessionProperties.SESSION_BEGIN_IMAGE_PATH.name()));
            countdown1ImageTextField.setText(properties.getProperty(SessionProperties.SESSION_COUNTDOWN_1_IMAGE_PATH.name()));
            countdown2ImageTextField.setText(properties.getProperty(SessionProperties.SESSION_COUNTDOWN_2_IMAGE_PATH.name()));
            countdown3ImageTextField.setText(properties.getProperty(SessionProperties.SESSION_COUNTDOWN_3_IMAGE_PATH.name()));
            imageStorageDirTextField.setText(properties.getProperty(SessionProperties.SESSION_IMAGE_DIRECTORY.name()));
            imageFileNamePrefixTextField.setText(properties.getProperty(SessionProperties.SESSION_IMAGE_PREFIX.name()));
            printImageCheckBox.setSelected(Boolean.parseBoolean(properties.getProperty(SessionProperties.SESSION_PRINT_IMAGE.name())));

            PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);
            for (PrintService printer : printServices)
            {
                if (printer.getName().equalsIgnoreCase(properties.getProperty(SessionProperties.SESSION_PRINTER.name())))
                {
                    printerSelectionComboBox.setSelectedItem(printer);
                }
            }

            printingImageTextField.setText(properties.getProperty(SessionProperties.SESSION_PRINTING_IMAGE_PATH.name()));
            endSessionImageTextField.setText(properties.getProperty(SessionProperties.SESSION_END_IMAGE_PATH.name()));
        }
    }

    public Properties setProperties(Properties properties)
    {
        properties.setProperty(SessionProperties.SESSION_BEGIN_ON_STARTUP.name(), Boolean.toString(startupSessionCheckbox.isSelected()));
        properties.setProperty(SessionProperties.SESSION_WELCOME_IMAGE_PATH.name(), welcomeImageTextField.getText());
        properties.setProperty(SessionProperties.SESSION_BEGIN_IMAGE_PATH.name(), beginSessionImageTextField.getText());
        properties.setProperty(SessionProperties.SESSION_COUNTDOWN_1_IMAGE_PATH.name(), countdown1ImageTextField.getText());
        properties.setProperty(SessionProperties.SESSION_COUNTDOWN_2_IMAGE_PATH.name(), countdown2ImageTextField.getText());
        properties.setProperty(SessionProperties.SESSION_COUNTDOWN_3_IMAGE_PATH.name(), countdown3ImageTextField.getText());
        properties.setProperty(SessionProperties.SESSION_PRINT_IMAGE.name(), Boolean.toString(printImageCheckBox.isSelected()));
        properties.setProperty(SessionProperties.SESSION_IMAGE_DIRECTORY.name(), imageStorageDirTextField.getText());
        properties.setProperty(SessionProperties.SESSION_IMAGE_PREFIX.name(), imageFileNamePrefixTextField.getText());
        properties.setProperty(SessionProperties.SESSION_PRINTER.name(), ((PrintService) printerSelectionComboBox.getSelectedItem()).getName());
        properties.setProperty(SessionProperties.SESSION_PRINTING_IMAGE_PATH.name(), printingImageTextField.getText());
        properties.setProperty(SessionProperties.SESSION_END_IMAGE_PATH.name(), endSessionImageTextField.getText());

        return properties;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        beginSessionImageLabel = new javax.swing.JLabel();
        welcomeImageLabel = new javax.swing.JLabel();
        welcomeImageTextField = new javax.swing.JTextField();
        beginSessionImageTextField = new javax.swing.JTextField();
        welcomeImageBrowseButton = new javax.swing.JButton();
        endSessionImageBrowseButton = new javax.swing.JButton();
        beginSessionImageBrowseButton = new javax.swing.JButton();
        endSessionImageTextField = new javax.swing.JTextField();
        endSessionImageLabel = new javax.swing.JLabel();
        startupSessionCheckbox = new javax.swing.JCheckBox();
        printImageCheckBox = new javax.swing.JCheckBox();
        printerLabel = new javax.swing.JLabel();
        printerSelectionComboBox = new javax.swing.JComboBox();
        countdown3ImageLabel = new javax.swing.JLabel();
        countdown1ImageTextField = new javax.swing.JTextField();
        countdown2ImageButton = new javax.swing.JButton();
        countdown2ImageLabel = new javax.swing.JLabel();
        countdown2ImageTextField = new javax.swing.JTextField();
        countdown3ImageTextField = new javax.swing.JTextField();
        countdown1ImageButton = new javax.swing.JButton();
        countdown3ImageButton = new javax.swing.JButton();
        countdown1ImageLabel = new javax.swing.JLabel();
        printingImageLabel = new javax.swing.JLabel();
        printingImageTextField = new javax.swing.JTextField();
        printingImageButton = new javax.swing.JButton();
        imageStorageDirLabel = new javax.swing.JLabel();
        imageStorageDirTextField = new javax.swing.JTextField();
        imageStorageDirButton = new javax.swing.JButton();
        imageFileNamePrefixLabel = new javax.swing.JLabel();
        imageFileNamePrefixTextField = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        beginSessionImageLabel.setText("Begin Session Image:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(beginSessionImageLabel, gridBagConstraints);

        welcomeImageLabel.setText("Welcome Image:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(welcomeImageLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(welcomeImageTextField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(beginSessionImageTextField, gridBagConstraints);

        welcomeImageBrowseButton.setText("Browse");
        welcomeImageBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                welcomeImageBrowseButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(welcomeImageBrowseButton, gridBagConstraints);

        endSessionImageBrowseButton.setText("Browse");
        endSessionImageBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endSessionImageBrowseButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(endSessionImageBrowseButton, gridBagConstraints);

        beginSessionImageBrowseButton.setText("Browse");
        beginSessionImageBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beginSessionImageBrowseButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(beginSessionImageBrowseButton, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(endSessionImageTextField, gridBagConstraints);

        endSessionImageLabel.setText("End Session Image:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(endSessionImageLabel, gridBagConstraints);

        startupSessionCheckbox.setText("Start Session on Startup");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(startupSessionCheckbox, gridBagConstraints);

        printImageCheckBox.setText("Print Session Image");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(printImageCheckBox, gridBagConstraints);

        printerLabel.setText("Printer:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(printerLabel, gridBagConstraints);

        printerSelectionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        printerSelectionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printerSelectionComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(printerSelectionComboBox, gridBagConstraints);

        countdown3ImageLabel.setText("Countdown #3 Image:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(countdown3ImageLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(countdown1ImageTextField, gridBagConstraints);

        countdown2ImageButton.setText("Browse");
        countdown2ImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countdown2ImageButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(countdown2ImageButton, gridBagConstraints);

        countdown2ImageLabel.setText("Countdown #2 Image:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(countdown2ImageLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(countdown2ImageTextField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(countdown3ImageTextField, gridBagConstraints);

        countdown1ImageButton.setText("Browse");
        countdown1ImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countdown1ImageButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(countdown1ImageButton, gridBagConstraints);

        countdown3ImageButton.setText("Browse");
        countdown3ImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countdown3ImageButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(countdown3ImageButton, gridBagConstraints);

        countdown1ImageLabel.setText("Countdown #1 Image:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(countdown1ImageLabel, gridBagConstraints);

        printingImageLabel.setText("Printing Image:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(printingImageLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(printingImageTextField, gridBagConstraints);

        printingImageButton.setText("Browse");
        printingImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printingImageButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(printingImageButton, gridBagConstraints);

        imageStorageDirLabel.setText("Image Storage Directory:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(imageStorageDirLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(imageStorageDirTextField, gridBagConstraints);

        imageStorageDirButton.setText("Browse");
        imageStorageDirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageStorageDirButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(imageStorageDirButton, gridBagConstraints);

        imageFileNamePrefixLabel.setText("Image Filename Prefix:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(imageFileNamePrefixLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(imageFileNamePrefixTextField, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

private void printerSelectionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printerSelectionComboBoxActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_printerSelectionComboBoxActionPerformed

private void welcomeImageBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_welcomeImageBrowseButtonActionPerformed

    JFileChooser chooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Image", "jpg", "png", "gif");
    chooser.setFileFilter(filter);
    int returnVal = chooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION)
    {
        welcomeImageTextField.setText(chooser.getSelectedFile().getPath());
    }
}//GEN-LAST:event_welcomeImageBrowseButtonActionPerformed

private void beginSessionImageBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beginSessionImageBrowseButtonActionPerformed
    JFileChooser chooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Image", "jpg", "png", "gif");
    chooser.setFileFilter(filter);
    int returnVal = chooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION)
    {
        beginSessionImageTextField.setText(chooser.getSelectedFile().getPath());
    }
}//GEN-LAST:event_beginSessionImageBrowseButtonActionPerformed

private void endSessionImageBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endSessionImageBrowseButtonActionPerformed
    JFileChooser chooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Image", "jpg", "png", "gif");
    chooser.setFileFilter(filter);
    int returnVal = chooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION)
    {
        endSessionImageTextField.setText(chooser.getSelectedFile().getPath());
    }
}//GEN-LAST:event_endSessionImageBrowseButtonActionPerformed

private void countdown2ImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countdown2ImageButtonActionPerformed
    JFileChooser chooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Image", "jpg", "png", "gif");
    chooser.setFileFilter(filter);
    int returnVal = chooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION)
    {
        countdown2ImageTextField.setText(chooser.getSelectedFile().getPath());
    }
}//GEN-LAST:event_countdown2ImageButtonActionPerformed

private void countdown1ImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countdown1ImageButtonActionPerformed
    JFileChooser chooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Image", "jpg", "png", "gif");
    chooser.setFileFilter(filter);
    int returnVal = chooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION)
    {
        countdown1ImageTextField.setText(chooser.getSelectedFile().getPath());
    }
}//GEN-LAST:event_countdown1ImageButtonActionPerformed

private void countdown3ImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countdown3ImageButtonActionPerformed
    JFileChooser chooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Image", "jpg", "png", "gif");
    chooser.setFileFilter(filter);
    int returnVal = chooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION)
    {
        countdown3ImageTextField.setText(chooser.getSelectedFile().getPath());
    }
}//GEN-LAST:event_countdown3ImageButtonActionPerformed

private void printingImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printingImageButtonActionPerformed
    JFileChooser chooser = new JFileChooser();
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Image", "jpg", "png", "gif");
    chooser.setFileFilter(filter);
    int returnVal = chooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION)
    {
        printingImageTextField.setText(chooser.getSelectedFile().getPath());
    }}//GEN-LAST:event_printingImageButtonActionPerformed

private void imageStorageDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageStorageDirButtonActionPerformed
    JFileChooser chooser = new JFileChooser();
    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    int returnVal = chooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION)
    {
        imageStorageDirTextField.setText(chooser.getSelectedFile().getPath());
    }
}//GEN-LAST:event_imageStorageDirButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton beginSessionImageBrowseButton;
    private javax.swing.JLabel beginSessionImageLabel;
    private javax.swing.JTextField beginSessionImageTextField;
    private javax.swing.JButton countdown1ImageButton;
    private javax.swing.JLabel countdown1ImageLabel;
    private javax.swing.JTextField countdown1ImageTextField;
    private javax.swing.JButton countdown2ImageButton;
    private javax.swing.JLabel countdown2ImageLabel;
    private javax.swing.JTextField countdown2ImageTextField;
    private javax.swing.JButton countdown3ImageButton;
    private javax.swing.JLabel countdown3ImageLabel;
    private javax.swing.JTextField countdown3ImageTextField;
    private javax.swing.JButton endSessionImageBrowseButton;
    private javax.swing.JLabel endSessionImageLabel;
    private javax.swing.JTextField endSessionImageTextField;
    private javax.swing.JLabel imageFileNamePrefixLabel;
    private javax.swing.JTextField imageFileNamePrefixTextField;
    private javax.swing.JButton imageStorageDirButton;
    private javax.swing.JLabel imageStorageDirLabel;
    private javax.swing.JTextField imageStorageDirTextField;
    private javax.swing.JCheckBox printImageCheckBox;
    private javax.swing.JLabel printerLabel;
    private javax.swing.JComboBox printerSelectionComboBox;
    private javax.swing.JButton printingImageButton;
    private javax.swing.JLabel printingImageLabel;
    private javax.swing.JTextField printingImageTextField;
    private javax.swing.JCheckBox startupSessionCheckbox;
    private javax.swing.JButton welcomeImageBrowseButton;
    private javax.swing.JLabel welcomeImageLabel;
    private javax.swing.JTextField welcomeImageTextField;
    // End of variables declaration//GEN-END:variables
}
